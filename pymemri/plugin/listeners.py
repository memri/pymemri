# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/plugin.listeners.ipynb (unless otherwise specified).

__all__ = ['status_listener', 'abort_process_callback', 'get_abort_plugin_listener']

# Cell

import time
import os
import signal
from multiprocessing import Process

# Cell
def status_listener(client, run_id, status, callback, interval=5, verbose=False):
    """
    Listens to status field of plugin, and executes callback when run.status == status.
    """
    if verbose:
        print(f"Listening for status='{status}' on Item {run_id}")
    while True:
        time.sleep(interval)
        try:
            run = client.get(run_id)
            if verbose:
                print(run.status)
            if run.status == status:
                callback()
        except Exception as e:
            print(f"Could not get run in status listener: {e}")

def abort_process_callback():
    print("Status aborted, killing plugin...")
    pgid = os.getpgid(os.getpid())
    os.killpg(pgid, signal.SIGABRT)

# Cell
def get_abort_plugin_listener(client, run_id):
    return Process(
        target=status_listener,
        args=(client, run_id, "aborted", abort_process_callback)
    )