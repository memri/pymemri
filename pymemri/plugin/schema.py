# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/plugin.schema.ipynb (unless otherwise specified).

__all__ = ['PluginRun']

# Cell
# hide
import random, string
from ..data.itembase import Item

# Cell
# hide
class PluginRun(Item):
    properties = Item.properties + ["containerImage", "pluginModule", "pluginName", "state", "targetItemId",
                                    "oAuthUrl", "message", "config"]
    edges = Item.edges + ["account"]

    def __init__(self, containerImage, pluginModule, pluginName, account=None, state=None, settings=None, targetItemId=None, oAuthUrl=None, message=None,
                 **kwargs):
        """
                PluginRun defines a the run of plugin `plugin_module.plugin_name`,
        with an optional `settings` string.

        Args:
            plugin_module (str): module of the plugin.
            plugin_name (str): class name of the plugin.
            settings (str, optional): Optional plugin configuration. For example,
                this could be a `json.dumps` of a configuration dict. Defaults to None.
        """
        super().__init__(**kwargs)
        self.pluginModule = pluginModule
        self.pluginName = pluginName
        self.containerImage = containerImage
        id_ = ''.join([random.choice(string.hexdigits) for i in range(32)]) if targetItemId is None else targetItemId
        self.targetItemId=id_
        self.id=id_
        self.state = state       # for stateful plugins
        self.settings = settings
        self.oAuthUrl = oAuthUrl # for authenticated plugins
        self.message = message   # universa

        self.account = account if account is not None else []